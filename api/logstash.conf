input{
 jdbc {
   jdbc_driver_library => "/home/victoriia/Downloads/mysql-connector-java_8.0.17-1ubuntu18.04_all/data/usr/share/java/mysql-connector-java-8.0.17.jar"
   jdbc_driver_class => "com.mysql.jdbc.Driver"
   jdbc_connection_string => "jdbc:mysql://localhost:3306/catalog?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC"
   jdbc_user => "samokish"
   jdbc_password => "qwerty"
   schedule => "* * * * *"
   statement => "SELECT * from brands"
   type => "brands"
 }

 jdbc {
   jdbc_driver_library => "/home/victoriia/Downloads/mysql-connector-java_8.0.17-1ubuntu18.04_all/data/usr/share/java/mysql-connector-java-8.0.17.jar"
   jdbc_driver_class => "com.mysql.jdbc.Driver"
   jdbc_connection_string => "jdbc:mysql://localhost:3306/catalog?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC"
   jdbc_user => "samokish"
   jdbc_password => "qwerty"
   schedule => "* * * * *"
   statement => "select c.id as id, c.name as name, b.id as brand_id, b.name as brand_name, t.id as type_id, t.name as type_name, JSON_ARRAYAGG(JSON_OBJECT('id', s.id, 'value', s.value)) as sizes from clothes as c join brands as b on c.brandId=b.id join types as t on c.typeId=t.id join clothSizes as cs on cs.clothId=c.id join sizes as s on cs.sizeId=s.id group by c.id"
   type => "clothes_denormal"
  }

 jdbc {
   jdbc_driver_library => "/home/victoriia/Downloads/mysql-connector-java_8.0.17-1ubuntu18.04_all/data/usr/share/java/mysql-connector-java-8.0.17.jar"
   jdbc_driver_class => "com.mysql.jdbc.Driver"
   jdbc_connection_string => "jdbc:mysql://localhost:3306/catalog?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC"
   jdbc_user => "samokish"
   jdbc_password => "qwerty"
   schedule => "* * * * *"
   statement => "select ts.id, name, value from types as t join typeSizes as ts on ts.typeId  = t.id join sizes as s on ts.sizeId  = s.id"
   type => "type_sizes_denormal"
  }
}

 filter {
  if [type] == "clothes_denormal" {
   mutate {
      add_field => { "index_type" => "clothes_denormal" }
      remove_field => ["type"]
   }
   mutate {
    rename => {
      "brand_name" => "[brand][name]"
    }
    rename => {
      "brand_id" => "[brand][id]"
    }
    rename => {
      "type_name" => "[type][name]"
    }
    rename => {
      "type_id" => "[type][id]"
    }
   }
  }
 }

output {
 if [type] == "brands" {
  elasticsearch{
    index => "catalog_brands"
    hosts => "localhost:9200"
    document_id => "%{id}"
  }
 }

 if [index_type] == "clothes_denormal" {
  elasticsearch{
    index => "catalog_clothes_denormal"
    hosts => "localhost:9200"
    document_id => "%{id}_%{value}"
  }
 }

 if [type] == "type_sizes_denormal" {
  elasticsearch{
    index => "catalog_type_sizes_denormal"
    hosts => "localhost:9200"
    document_id => "%{id}"
  }
 }
}

