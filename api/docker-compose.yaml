version: '2.2'

services:
  db:
    image: mysql:5.7
    restart: always
    command: --max_allowed_packet=32505856 --character-set-server=utf8 --collation-server=utf8_general_ci
    environment:
      MYSQL_DATABASE: catalog
      MYSQL_USER: samokish
      MYSQL_PASSWORD: qwerty
      MYSQL_ROOT_PASSWORD: 'password'
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=password --execute \"use catalog;\""  
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3308:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'

  test-db:
    image: mysql:5.7
    restart: always
    command: --character-set-server=utf8 --collation-server=utf8_general_ci
    environment:
      MYSQL_DATABASE: catalog_test
      MYSQL_USER: samokish
      MYSQL_PASSWORD: qwerty
      MYSQL_ROOT_PASSWORD: 'password'
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=password --execute \"use catalog_test;\""  
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3307:3306'
    expose:
      # Opens port 3306 on the container
      - '3306' 

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.0.1
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    logging:
      driver: none
    ports:
      - 9302:9300
      - 9202:9200 
    expose:
      - '9300'
      - '9200' 

  elasticsearch-test:
    container_name: elasticsearch-test
    image: docker.elastic.co/elasticsearch/elasticsearch:7.0.1
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    logging:
      driver: none
    ports:
      - 9303:9300
      - 9203:9200 
    expose:
      - '9300'
      - '9200'     
      
  logstash:
    build:
      context: .
      dockerfile: ./docker/logstash/Dockerfile
    links:
      - elasticsearch 
      - elasticsearch-test
    depends_on:
      - elasticsearch
      - elasticsearch-test   

  myapi:
    container_name: myapi
    build:
        context: .
        dockerfile: ./docker/myapi/Dockerfile
    ports:
        - "0.0.0.0:3000:3000"
    expose:
        - "3000"
        - "3030"    
    links:
      - db:db
      - test-db:test-db
    depends_on:
      db:
        condition: service_healthy
      test-db:
        condition: service_healthy 
      elasticsearch:
        condition: service_started 
      logstash:
        condition: service_started        
    environment:
      HOST: 0.0.0.0
      PORT: 3000
      TEST_HOST: 0.0.0.0
      TEST_PORT: 3030
      DB_HOST: db
      DB_NAME: catalog
      DB_USERNAME: samokish
      DB_PASSWORD: qwerty
      TEST_DB_HOST: test-db
      TEST_DB_NAME: catalog_test 
      TEST_DB_USERNAME: samokish
      TEST_DB_PASSWORD: qwerty
      ELASTIC_HOST: elasticsearch
      ELASTIC_TEST_HOST: elasticsearch-test
      ELASTIC_TEST_PORT: 9200
    command:  
        - /bin/sh
        - -c
        - |
          ./node_modules/.bin/knex --knexfile ./config/knexfile-test.js migrate:latest
          npm start

networks:
  api_default:
 